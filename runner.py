# runner.py
import asyncio
import logging
import inspect
import sys

from aiogram.exceptions import TelegramConflictError

# –í–∞–∂–Ω–æ: –≤ main.py –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ polling –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
from main import bot, dp, ADMINS, CHANNEL_ID, TZ
from storage.db import init_db

# ---------- –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ----------
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s",
)
log = logging.getLogger("runner")


async def _notify_admins(text: str) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –≤ –ª–∏—á–∫—É."""
    if not ADMINS:
        log.warning("ADMINS –ø—É—Å—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ–∫–æ–º—É")
        return
    for admin_id in ADMINS:
        try:
            await bot.send_message(admin_id, text, disable_web_page_preview=True)
        except Exception as e:
            log.exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")


async def _safe_close_bot():
    try:
        await bot.session.close()
    except Exception:
        pass


async def _run():
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ä—Ç–µ
    await _notify_admins(
        f"üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–∫–∞–Ω–∞–ª @{CHANNEL_ID.strip('@')}, TZ={TZ}). "
        f"–ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–≤–∞ ‚Äî –∑–∞–ø—É—â–µ–Ω—ã –¥–≤–∞ –∏–Ω—Å—Ç–∞–Ω—Å–∞."
    )

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ sync/async –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
    if inspect.iscoroutinefunction(init_db):
        await init_db()
    else:
        init_db()

    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π polling
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())

    except TelegramConflictError as e:
        # –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π getUpdates (–≤—Ç–æ—Ä–æ–π –∏–Ω—Å—Ç–∞–Ω—Å —Å —Ç–µ–º –∂–µ —Ç–æ–∫–µ–Ω–æ–º)
        msg = (
            "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–≤–æ–π–Ω–æ–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.\n\n"
            "‚Ä¢ Telegram –∑–∞–≤–µ—Ä—à–∏–ª —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∏–∑-–∑–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ getUpdates.\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ –Ω–∞ –¥—Ä—É–≥–æ–º —Å–µ—Ä–≤–∏—Å–µ —Å —Ç–µ–º –∂–µ —Ç–æ–∫–µ–Ω–æ–º.\n\n"
            f"–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏: {e.__class__.__name__}: {e}"
        )
        log.error(msg)
        await _notify_admins(msg)
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º HTTP-—Å–µ—Å—Å–∏—é –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ë–ï–ó —Ä–µ—Ç—Ä–∞–µ–≤
        await _safe_close_bot()
        sys.exit(0)

    except Exception as e:
        # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ ‚Äî —É–≤–µ–¥–æ–º–∏–º –∏ –¥–∞–¥–∏–º –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
        msg = f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}"
        log.exception(msg)
        await _notify_admins(msg)
        await _safe_close_bot()
        raise

    finally:
        # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –∑–∞–∫—Ä–æ–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ —Å—é–¥–∞ –ø–æ–ø–∞–ª–∏ –ø–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é
        await _safe_close_bot()


if __name__ == "__main__":
    asyncio.run(_run())
